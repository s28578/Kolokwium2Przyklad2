// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Context;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MuzykaDbContext))]
    [Migration("20240609193408_AddedTables")]
    partial class AddedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.AlbumAPBD", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<DateTime>("DataWydania")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdWytwornia")
                        .HasColumnType("int");

                    b.Property<string>("NazwaAlbumu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAlbum")
                        .HasName("AlbumAPBD_pk");

                    b.HasIndex("IdWytwornia");

                    b.ToTable("AlbumAPBD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.MuzykAPBD", b =>
                {
                    b.Property<int>("IdMuzyk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMuzyk"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Pseudonim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMuzyk")
                        .HasName("MuzykAPBD_pk");

                    b.ToTable("MuzykAPBD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.UtworAPBD", b =>
                {
                    b.Property<int>("IdUtwor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtwor"));

                    b.Property<double>("CzasTrwania")
                        .HasColumnType("float");

                    b.Property<int?>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("NazwaUtworu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUtwor")
                        .HasName("UtworAPBD_pk");

                    b.HasIndex("IdAlbum");

                    b.ToTable("UtworAPBD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.WykonawcaUtworuAPBD", b =>
                {
                    b.Property<int>("IdUtwor")
                        .HasColumnType("int");

                    b.Property<int>("IdMuzyk")
                        .HasColumnType("int");

                    b.HasKey("IdUtwor", "IdMuzyk")
                        .HasName("WykonawcaUtworuAPBD_pk");

                    b.HasIndex("IdMuzyk");

                    b.ToTable("WykonawcaUtworuAPBD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.WytworniaAPBD", b =>
                {
                    b.Property<int>("IdWytwornia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWytwornia"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdWytwornia")
                        .HasName("WytworniaAPBD_pk");

                    b.ToTable("WytworniaAPBD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.AlbumAPBD", b =>
                {
                    b.HasOne("WebApplication1.Models.WytworniaAPBD", "WytworniaAPBD")
                        .WithMany("Albumy")
                        .HasForeignKey("IdWytwornia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Album_WytworniaAPBD");

                    b.Navigation("WytworniaAPBD");
                });

            modelBuilder.Entity("WebApplication1.Models.UtworAPBD", b =>
                {
                    b.HasOne("WebApplication1.Models.AlbumAPBD", "AlbumAPBD")
                        .WithMany("Utwory")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("Utwor_AlbumAPBD");

                    b.Navigation("AlbumAPBD");
                });

            modelBuilder.Entity("WebApplication1.Models.WykonawcaUtworuAPBD", b =>
                {
                    b.HasOne("WebApplication1.Models.MuzykAPBD", "MuzykAPBD")
                        .WithMany("WykonawcaUtworow")
                        .HasForeignKey("IdMuzyk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Muzyk_WykAPBD");

                    b.HasOne("WebApplication1.Models.UtworAPBD", "UtworAPBD")
                        .WithMany("WykonawcaUtworow")
                        .HasForeignKey("IdUtwor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Utwor_WykAPBD");

                    b.Navigation("MuzykAPBD");

                    b.Navigation("UtworAPBD");
                });

            modelBuilder.Entity("WebApplication1.Models.AlbumAPBD", b =>
                {
                    b.Navigation("Utwory");
                });

            modelBuilder.Entity("WebApplication1.Models.MuzykAPBD", b =>
                {
                    b.Navigation("WykonawcaUtworow");
                });

            modelBuilder.Entity("WebApplication1.Models.UtworAPBD", b =>
                {
                    b.Navigation("WykonawcaUtworow");
                });

            modelBuilder.Entity("WebApplication1.Models.WytworniaAPBD", b =>
                {
                    b.Navigation("Albumy");
                });
#pragma warning restore 612, 618
        }
    }
}
